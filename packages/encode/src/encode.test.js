import {encodeTransactionPayload, encodeTransactionEnvelope} from "./encode"

describe("encode transaction", () => {
  const tx = {
    script: `transaction { execute { log("Hello, World!") } }`,
    refBlock: "f0e4c2f76c58916ec258f246851bea091d14d4247a2fc3e18694461b1816e13b",
    gasLimit: 42,
    proposalKey: {
      address: "01",
      key: 4,
      sequenceNum: 10,
    },
    payer: "01",
    authorizers: ["01"],
    payloadSigs: [{
      address: "01",
      key: 4,
      sig: "f7225388c1d69d57e6251c9fda50cbbf9e05131e5adb81e5aa0422402f048162",
    }]
  }

  test("encode payload", () => {
    expect(encodeTransactionPayload(tx)).toBe("f895b07472616e73616374696f6e207b2065786563757465207b206c6f67282248656c6c6f2c20576f726c64212229207d207da0f0e4c2f76c58916ec258f246851bea091d14d4247a2fc3e18694461b1816e13b2a940000000000000000000000000000000000000001040a940000000000000000000000000000000000000001d5940000000000000000000000000000000000000001")
  })

  test("encode envelop", () => {
    expect(encodeTransactionEnvelope(tx)).toBe("f8bcf895b07472616e73616374696f6e207b2065786563757465207b206c6f67282248656c6c6f2c20576f726c64212229207d207da0f0e4c2f76c58916ec258f246851bea091d14d4247a2fc3e18694461b1816e13b2a940000000000000000000000000000000000000001040a940000000000000000000000000000000000000001d5940000000000000000000000000000000000000001e4e38004a0f7225388c1d69d57e6251c9fda50cbbf9e05131e5adb81e5aa0422402f048162")
  })
})
